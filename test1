// ==UserScript==
// @name Chat hurt eyes
// @namespace torn.com
// @version 0.9.1
// @author Ahab [1735214]
// @include *torn.com*
// @grant GM_addStyle
// @license MIT
// @require https://jpillora.com/xhook/dist/xhook.js
// @require https://gist.githubusercontent.com/BrockA/2625891/raw/9c97aa67ff9c5d56be34a55ad6c18a314e5eb548/waitForKeyElements.js
// @require https://raw.githubusercontent.com/seballot/spectrum/59bfa41e0dac01d5db8fa1dd63322e9f72561c5e/src/spectrum.js
// ==/UserScript==

var chatId = {}
var settings = {}
var temp = {}
var userid = 0
var customColor = ""
var style = ""

if(localStorage.chatSettings === undefined){
    localStorage.chatSettings = JSON.stringify({})
    settings = {}
}else{
    settings = JSON.parse(localStorage.chatSettings);
}

$.each(settings, function(i, v){
    if(i != 'fs'){
        $.each(settings[i], function(q, p){
            if(q == 'bg'){
                $('<style id="bg'+i+'">div[data-userid="'+i+'"] { background-color:'+settings[i][q]+"!important; }</style>").appendTo('head')
            }else{
                $('<style id="fc'+i+'">div[data-userid="'+i+'"] p, div[data-userid="'+i+'"] a { color:'+settings[i][q]+"!important; }</style>").appendTo('head')
            }
        })
    }
})
if('fs' in settings){
    $('<style id="fs">div[class*="chat-box-body__message-box"] p, div[class*="chat-box-body__message-box"] a { font-size:'+settings['fs']+"rem!important; }</style>").appendTo('head')
}


xhook.after(function(request, response) {
  if(request.url.match(/private/)){
      response.clone().text().then((text) => {
          var data = JSON.parse(text)
          if(data.hasOwnProperty('members')){
              $.each(data['members'], function(i, v){
                  if(data['members'][i]['user_id'] !== $('ul[class^="settings-menu"]').find('.link')[0].children[0].href.split("=")[1] && data['members'][i]['profile_url'].indexOf('profile') !== -1){
                      chatId[data['members'][i]['nickname']] = data['members'][i]['user_id']
                  }
              })
          }
      })
      load()
  }
  if(request.url.match(/show_read_receipt/)){
      response.clone().text().then((text) => {
          var data = JSON.parse(text)
          if(data['name'] == 'private-chat' && data['last_message'] != null && 'created_at' in data['last_message']){
              $.each(data['members'], function(i, v){
                  if(data['members'][i]['user_id'] !== $('ul[class^="settings-menu"]').find('.link')[0].children[0].href.split("=")[1] && $('p[class*="chat-box-header__name"]').length !== 0){
                      $.each($('p[class*="chat-box-header__name"]'), function(o, t){
                          if($('p[class*="chat-box-header__name"]')[o].innerText == data['members'][i]['nickname'] && $($('p[class*="chat-box-header__name"]')[o].parentElement.parentElement).children('#tStamp').length < 1){
                              $($('p[class*="chat-box-header__name"]')[o].parentElement).after('<p id="tStamp" class="tStamp">Last Message: '+new Date(data['last_message']['created_at']).toJSON().replace('T', ' ').slice(0, -5)+'</p>')
                          }
                          else if($('p[class*="chat-box-header__name"]')[o].innerText == data['members'][i]['nickname'] && $($('p[class*="chat-box-header__name"]')[o].parentElement.parentElement).children('#tStamp').length == 1){
                              $($('p[class*="chat-box-header__name"]')[o].parentElement).children('#tStamp').replaceWith('<p id="tStamp" class="tStamp">Last Message: '+new Date(data['last_message']['created_at']).toJSON().replace('T', ' ').slice(0, -5)+'</p>')
                          }
                      })
                  }
              })
          }else{
              if($('p[class*="chat-box-header__name"]').length !== 0){
                  $.each($('p[class*="chat-box-header__name"]'), function(o, t){
                      if($('p[class*="chat-box-header__name"]')[o].innerText == data['name'] && $($('p[class*="chat-box-header__name"]')[o].parentElement.parentElement).children('#tStamp').length < 1){
                          const time = new Date(data['last_message']['created_at']).toJSON().replace('T', ' ').slice(0, -5)
                          $($('p[class*="chat-box-header__name"]')[o].parentElement).after('<p id="tStamp" class="tStamp">Last Message: '+time+'</p>')
                      }
                      else if($('p[class*="chat-box-header__name"]')[o].innerText == data['name'] && $($('p[class*="chat-box-header__name"]')[o].parentElement.parentElement).children('#tStamp').length == 1){
                          const time = new Date(data['last_message']['created_at']).toJSON().replace('T', ' ').slice(0, -5)
                          $($('p[class*="chat-box-header__name"]')[o].parentElement).children('#tStamp').replaceWith('<p id="tStamp" class="tStamp">Last Message: '+time+'</p>')
                      }
                  })
              }
          }
      })
  }
});

if($(window).width() < 600){
    $($('button[title*="Faction"]')).detach().appendTo($('div[class*="group-minimized-chat-box___gdkW9"]')).wrap('<div class="minimized-chat-box___AoXrV"></div>')
}

function load(){
    $.each($('img[alt^="chat-avatar"][class*="avatar--medium"]'), function(i, v){
        var id = $('img[class*="avatar--medium"]')[i].src.split("-")[$('img[alt^="chat-avatar"][class*="avatar--medium"]')[i].src.split("-").length-1].split(".")[0]
        if($('img[class*="avatar--medium"]')[i].src.indexOf('profile') !== -1){
            id = chatId[$('img[class*="avatar--medium"]')[i].parentElement.parentElement.nextSibling.innerText]
        }
        $('img[alt^="chat-avatar"][class*="avatar--medium"]')[i].parentElement.href = "https://www.torn.com/profiles.php?XID="+id
    })
}

var ChatTarget = $('div[class^="group-chat-box"]')[0];
var ChatConfig = { attributes: false, childList: true, characterData: false, subtree: false };
var Chat = new MutationObserver(function(mutations2) {
    if(mutations2[0].addedNodes.length == 1 && mutations2[0].addedNodes[0].className.indexOf("unread-message-count") !== -1 && $(mutations2[0].addedNodes)[0].find('[class*="chat-box-header__info-btn___"]').indexOf('btn') !== -1){
        addMini(mutations2)
    }

})
Chat.observe(ChatTarget, ChatConfig);

var minChatTarget = $('div[class^="group-minimized-chat-box"]')[0];
var minChatConfig = { attributes: false, childList: true, characterData: false, subtree: true };
var minChat = new MutationObserver(function(mutations1) {
    if(mutations1[0].addedNodes.length == 1 && mutations1[0].addedNodes[0].className.indexOf("unread-message-count") !== -1 || mutations1[0].addedNodes.length == 1){
        addMini(mutations1)
    }
})
minChat.observe(minChatTarget, minChatConfig);

var addTarget = $('div[class*="group-chat-box___"]')[0];
var addConfig = { attributes: false, childList: true, characterData: false, subtree: true };
var add = new MutationObserver(function(mutations) {
    $.each($(mutations), function(index, val){
        if(val.addedNodes.length == 1 && $(val.target)[0].className.indexOf("header") == -1){
            userid = $($(val.addedNodes[0]).find('[class*="hrefLink___"]'))[0].href.split('=')[1]
            $($(val.addedNodes[0]).find('[class^="chat-box-body__message-box"]')[0]).attr("data-userid", userid)
            if(userid in settings){
                $(val.addedNodes[0]).find('[class*="chat-box-body___NWs3t"]').children().find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]')).css("background-color", settings[userid]['bg'])
            }
            if(userid in settings){
                $('div[data-userid="'+userid+'"]').find("p").css("color", settings[userid]['fc']);
                $('div[data-userid="'+userid+'"]').find("a").css("color", settings[userid]['fc']);
            }
        }
    })
})
add.observe(addTarget, addConfig);

function options(){
    var bgy = getComputedStyle(document.documentElement).getPropertyValue('--chat-box-body-message-box-self')
    var fcy = "#f6f6f6"
    var bgt = getComputedStyle(document.documentElement).getPropertyValue('--chat-box-body-message-box')
    var fct = getComputedStyle(document.documentElement).getPropertyValue('--chat-box-body-message')
    var fs = '0.75'
    if($('script[uid]').attr("uid") in settings){
        if('bg' in settings[$('script[uid]').attr("uid")]){
            bgy = settings[$('script[uid]').attr("uid")]['bg']
        }
        if('fc' in settings[$('script[uid]').attr("uid")]){
            fcy = settings[$('script[uid]').attr("uid")]['fc']
        }
    }
    if($($('div[class^="chat-box-options___"]')[0].parentElement).find('[class^="avatar__avatar-status-wrapper"]')[0].href.split("=")[1] in settings){
        if('bg' in settings[$($('div[class^="chat-box-options___"]')[0].parentElement).find('[class^="avatar__avatar-status-wrapper"]')[0].href.split("=")[1]]){
            bgt = settings[$($('div[class^="chat-box-options___"]')[0].parentElement).find('[class^="avatar__avatar-status-wrapper"]')[0].href.split("=")[1]]['bg']
            console.log(bgt)
        }
        if('fc' in settings[$($('div[class^="chat-box-options___"]')[0].parentElement).find('[class^="avatar__avatar-status-wrapper"]')[0].href.split("=")[1]]){
            fct = settings[$($('div[class^="chat-box-options___"]')[0].parentElement).find('[class^="avatar__avatar-status-wrapper"]')[0].href.split("=")[1]]['fc']
        }
    }
    if('fs' in settings){
        fs = settings['fs']
    }
    $('div[class^="chat-box-options___"]').children().append('<hr class="delimiter-999 m-top10 m-bottom10"><div id="chatOptions"><div id="optionsLabel" class="h6">Options</div><div class="optionsRowB"><input type="range" min="0.1" max="1.5" value="'+fs+'" step="0.1" class="slider" id="myRange"><p class="typography___Dc5WV body4 color-#333333">Font Size</p></div><div id="optionsLabel" class="h7">You</div><div class="optionsRow"><div><input id="custom" data-color="'+bgy+'" class="bgpickerYou" style="display: none;"><p class="typography___Dc5WV body4 color-#333333">Background</p></div><div><input id="custom" data-color="'+fcy+'" class="fcpickerYou" style="display: none;"><p class="typography___Dc5WV body4 color-#333333 chat-box-options__label___QSXin">Font</p></div></div><div id="optionsLabel" class="h7">Them</div><div class="optionsRow"><div><input id="custom" data-color="'+bgt+'" class="bgpickerThem" style="display: none;"><p class="typography___Dc5WV body4 color-#333333">Background</p></div><div><input id="custom" data-color="'+fct+'" class="fcpickerThem" style="display: none;"><p class="typography___Dc5WV body4 color-#333333 chat-box-options__label___QSXin">Font</p></div></div></div>')
    $("#custom, #custom1").spectrum({
        type: "color",
        showPalette: false,
        showInput: true,
        showAlpha: true,
        allowEmpty: true,
        clickoutFiresChange: true,
        closeOnClickout: true,
        showInitial: true,
        showButtons: false,
        cancelText: "cancel",
        chooseText: "choose",
        preferredFormat: "rgb",
        appendTo: $('div[id^="chatOptions"]')[0]
    });

    $(".bgpickerYou").on('move.spectrum', function(e, tinycolor){
        $('style[id*="bg'+$('script[uid]').attr("uid")+'"]').remove()
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('div[class*="chat-box-body__message-box--self___"]').css("background-color", customColor);
        }else{
            $('div[class*="chat-box-body__message-box--self___"]').css('background-color', "")
        }
    });
    $(".bgpickerYou").on('change.spectrum', function(e, tinycolor){
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('<style id="bg'+$('script[uid]').attr("uid")+'">div[class*="chat-box-body__message-box--self___"] { background:none!important; } div[class*="chat-box-body__message-box--self___"] { background-color:'+customColor+'!important; } </style>' ).appendTo( "head" )
            saveId($('script[uid]').attr("uid"), 'bg', customColor)
        }else{
            removeId($('script[uid]').attr("uid"), 'bg')
        }
    });

    $(".bgpickerThem").on('move.spectrum', function(e, tinycolor){
        if($(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]')).length != 0){
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]'))[0].getAttribute("data-userid")
        }else{
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="avatar__avatar-status-wrapper"]'))[0].href.split('=')[1]
        }
        $('style[id*="bg'+userid+'"]').remove()
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('div[data-userid="'+userid+'"]').css("background-color", customColor);
        }else{
            $('div[data-userid="'+userid+'"]').css("background-color", "");
        }
    });
    $(".bgpickerThem").on('change.spectrum', function(e, tinycolor){
        if($(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]')).length != 0){
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]'))[0].getAttribute("data-userid")
        }else{
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="avatar__avatar-status-wrapper"]'))[0].href.split('=')[1]
        }
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('<style id="bg'+userid+'">div[data-userid="'+userid+'"] { background-color:'+customColor+'!important; }</style>' ).appendTo( "head" )
            saveId(userid, 'bg', customColor)
        }else{
            removeId(userid, 'bg')
        }
    });

    $(".fcpickerYou").on('move.spectrum', function(e, tinycolor){
        $('style[id*="fc'+$('script[uid]').attr("uid")+'"]').remove()
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('div[class*="chat-box-body__message-box--self___"]').find("p").css("color", customColor)
            $('div[class*="chat-box-body__message-box--self___"]').find("a").css("color", customColor)
        }else{
            $('div[class*="chat-box-body__message-box--self___"]').find("p").css("color", "")
            $('div[class*="chat-box-body__message-box--self___"]').find("a").css("color", "")
        }
    });
    $(".fcpickerYou").on('change.spectrum', function(e, tinycolor){
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('<style id="fc'+$('script[uid]').attr("uid")+'">div[class*="chat-box-body__message-box--self___"] p { color:'+customColor+'!important; }</style>' ).appendTo( "head" )
            $('<style id="fc'+$('script[uid]').attr("uid")+'">div[class*="chat-box-body__message-box--self___"] a { color:'+customColor+'!important; }</style>' ).appendTo( "head" )
            saveId($('script[uid]').attr("uid"), 'fc', customColor)
        }else{
            removeId($('script[uid]').attr("uid"), 'fc')
        }
    });

    $(".fcpickerThem").on('move.spectrum', function(e, tinycolor){
        if($(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]')).length != 0){
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]'))[0].getAttribute("data-userid")
        }else{
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="avatar__avatar-status-wrapper"]'))[0].href.split('=')[1]
        }
        $('style[id*="fc'+userid+'"]').remove()
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('div[data-userid="'+userid+'"]').find("p").css("color", customColor);
            $('div[data-userid="'+userid+'"]').find("a").css("color", customColor);
        }else{
            $('div[data-userid="'+userid+'"]').find("p").css("color", "");
            $('div[data-userid="'+userid+'"]').find("a").css("color", "");
        }
    });
    $(".fcpickerThem").on('change.spectrum', function(e, tinycolor){
        if($(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]')).length != 0){
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="chat-box-body__message-box___"]:not([class*="chat-box-body__message-box--self"]'))[0].getAttribute("data-userid")
        }else{
            userid = $(e.target.parentElement.offsetParent.offsetParent).find($('[class^="avatar__avatar-status-wrapper"]'))[0].href.split('=')[1]
        }
        if(e.target.value !== ""){
            customColor = tinycolor.toRgbString()
            $('<style id="fc'+userid+'">div[data-userid="'+userid+'"] p { color:'+customColor+'!important; }</style>' ).appendTo( "head" )
            $('<style id="fc'+userid+'">div[data-userid="'+userid+'"] a { color:'+customColor+'!important; }</style>' ).appendTo( "head" )
            saveId(userid, 'fc', customColor)
        }else{
            removeId(userid, 'fc')
        }
    });

    $("#myRange").on('input', function(e){
        $('style[id*="fs"]').remove()
        $('div[class*="chat-box-body__message-box"] p').css("font-size", e.target.value+"rem");
        $('div[class*="chat-box-body__message-box"] a').css("font-size", e.target.value+"rem");
        $('<style id="fs">div[class*="chat-box-body__message-box"] p, div[class*="chat-box-body__message-box"] a { font-size:'+e.target.value+"rem!important; }</style>").appendTo('head')
        temp = {}
        temp['fs'] = [e.target.value]
        $.extend(true, settings, temp)
        localStorage.chatSettings = JSON.stringify(settings);
    });

    $('button[class*="chat-box-options__button"]').on('click', function(e){
        $('div[id*="chatOptions"]').hide()
    });
    $('button[class*="chat-box-options__confirmation-button___"]').on('click', function(e){
        $('div[id*="chatOptions"]').show()
    });

    $('input[id*="custom"]').on('show.spectrum', function(e){
        $('.sp-replacer').addClass('sp-disabled');
        $('.sp-replacer').attr('disabled', 'disabled');
    })
    $('input[id*="custom"]').on('hide.spectrum', function(e){
        $('.sp-replacer').removeClass('sp-disabled');
        $('.sp-replacer').removeAttr('disabled');
    })
}

waitForKeyElements('div[class^="chat-box-options___"]', options)

function saveId(uid, type, color){
    temp = {}
    temp[uid] = {[type]:color}
    $.extend(true, settings, temp)
    localStorage.chatSettings = JSON.stringify(settings);
}

function removeId(uid, type){
    $('style[id*="'+type+$('script[uid]').attr("uid")+'"]').remove()
    delete settings[uid][type]
    if(Object.keys(settings[uid]).length == 0){
        delete settings[uid]
    }
    localStorage.chatSettings = JSON.stringify(settings)
}
function addMini(mutations){
    var id = ""
    if($(mutations[0].addedNodes[0]).find('img[alt^="chat-avatar"]').length > 0){
        id = $(mutations[0].addedNodes[0].parentElement).find('img[alt^="chat-avatar"]')[0].src.split("-")[$(mutations[0].addedNodes[0].parentElement).find('img[alt^="chat-avatar"]')[0].src.split("-").length-1].split(".")[0]
    }
    else if($(mutations[0].addedNodes[0]).find('img[alt^="chat-avatar"]')[0].src.indexOf('profile') !== -1){
        id = chatId[$(mutations)[0].addedNodes[0].children[0].children[1].children[0].innerText]
    }
    $(mutations[0].addedNodes[0].parentElement).find('img[alt^="chat-avatar"]')[0].parentElement.href = "https://www.torn.com/profiles.php?XID="+id
}
